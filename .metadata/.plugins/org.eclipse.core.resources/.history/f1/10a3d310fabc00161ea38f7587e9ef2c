package com.example.scantest;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;

import android.os.Bundle;
import android.app.Activity;
import android.content.BroadcastReceiver;
import android.content.ContentResolver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.util.Log;
import android.view.Menu;
import android.view.MenuItem;
import android.view.MotionEvent;
import android.view.View;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.ListView;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.Switch;
import android.widget.Toast;
import android.provider.Settings;

public class MainActivity extends Activity {

	public static final String SCN_CUST_ACTION_SCODE = "com.android.server.scannerservice.broadcast";
	public static final String SCN_CUST_EX_SCODE = "scannerdata";
	/* defined by MEXXEN */
	public static final String SCN_CUST_ACTION_START = "android.intent.action.SCANNER_BUTTON_DOWN";
	public static final String SCN_CUST_ACTION_CANCEL = "android.intent.action.SCANNER_BUTTON_UP";

	private static final String SCANNER_CTRL_FILE = "/sys/devices/platform/scan_se955/se955_state";
	// Array adapter for the conversation thread
	private ArrayAdapter<String> mConversationArrayAdapter;
	public static final String SCANNER_OUTPUT_MODE = "SCANNER_OUTPUT_MODE";
	RadioGroup RadioGroup1;
	RadioButton send_to_focus, key_emuation, copy_to_cliboard, api;
	ContentResolver resolver;
	Button btnUp, btnDown,btnScan,btnClear;
	Switch switch1;
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);

		// Initialize the array adapter for the conversation thread
		mConversationArrayAdapter = new ArrayAdapter<String>(this, R.layout.message);
		ListView mConversationView = (ListView) findViewById(R.id.listView);
		mConversationView.setAdapter(mConversationArrayAdapter);

		// Register receiver
		IntentFilter intentFilter = new IntentFilter(SCN_CUST_ACTION_SCODE);
		registerReceiver(mSamDataReceiver, intentFilter);

		// Button listener:
		final Button button = (Button) findViewById(R.id.button);
		button.setOnTouchListener(new View.OnTouchListener() {
			@Override
			public boolean onTouch(View v, MotionEvent event) {
				if (event.getAction() == MotionEvent.ACTION_DOWN) {
					onTouchButton();
				} else if (event.getAction() == MotionEvent.ACTION_UP) {
					onReleaseButton();
				}
				return false;
			}
		});
		switch1=(Switch) findViewById(R.id.switch1);
		switch1.setChecked(true);
		switch1.setFocusable(false);
		
		btnUp = (Button) findViewById(R.id.button3);
		btnDown = (Button) findViewById(R.id.button4);
		btnUp.setVisibility(btnUp.INVISIBLE);
		btnDown.setVisibility(btnDown.INVISIBLE);
		btnScan=(Button)findViewById(R.id.button );
		btnScan.setFocusable(false);
		btnClear=(Button)findViewById(R.id.button2 );
		btnClear.setFocusable(false);
		mConversationView.setFocusable(false);
		

	}



	private void onTouchButton() {
		Intent scannerIntent = new Intent(SCN_CUST_ACTION_START);
		sendBroadcast(scannerIntent);
	}

	private void onReleaseButton() {
		Intent scannerIntent = new Intent(SCN_CUST_ACTION_CANCEL);
		sendBroadcast(scannerIntent);
	}

	public void ClickClear(View view) {
		mConversationArrayAdapter.clear();

	}

	

	private BroadcastReceiver mSamDataReceiver = new BroadcastReceiver() {
		@Override
		public void onReceive(Context context, Intent intent) {
			if (intent.getAction().equals(SCN_CUST_ACTION_SCODE)) {
				String message = intent.getStringExtra(SCN_CUST_EX_SCODE);
				mConversationArrayAdapter.add(message);
			}
		}
	};

	public void ClickDown(View view) {
		try {
			Intent scannerIntent = new Intent(SCN_CUST_ACTION_START);
			sendBroadcast(scannerIntent);
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
		}

	}

	public void ClickUp(View view) {
		Intent scannerIntent = new Intent(SCN_CUST_ACTION_CANCEL);
		sendBroadcast(scannerIntent);
	}

	private void writeToScannerCtrlFile(String data) {
		try {
			FileOutputStream fis = new FileOutputStream(new File(
					SCANNER_CTRL_FILE));
			fis.write(data.getBytes());
			fis.close();
		} catch (IOException e) {
			Log.e("Exception", "File write failed: " + e.toString());
		}
	}

	public void onToggleClicked(View view) {
		// Is the toggle on?
		boolean on = ((Switch) view).isChecked();

		if (on) {
			writeToScannerCtrlFile("4");
		} else {
			writeToScannerCtrlFile("5");
		}
	}
}
